{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/kkulkarni1/dev/front_end_summit/next_serverless/pages/film.js\";\nimport React from \"react\";\nimport fetch from 'isomorphic-unfetch';\n\nfunction FilmPage(props) {\n  var data = props.data;\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"JSON.s\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, data.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Directed by - \", data.director));\n}\n\nFilmPage.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var query, filmID, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref.query;\n            filmID = query.filmID;\n            console.log(\"logging here\");\n            _context.next = 5;\n            return fetch(\"https://swapi.co/api/films/\".concat(filmID));\n\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.json();\n\n          case 8:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default FilmPage;","map":{"version":3,"sources":["/Users/kkulkarni1/dev/front_end_summit/next_serverless/pages/film.js"],"names":["fetch","FilmPage","props","data","title","director","getInitialProps","query","filmID","console","log","res","json"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MACdC,IADc,GACND,KADM,CACdC,IADc;AAErB,SAAO,0CACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,KAAV,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBD,IAAI,CAACE,QAAvB,CAHG,CAAP;AAKH;;AAEDJ,QAAQ,CAACK,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,YAAAA,KAAP,QAAOA,KAAP;AAChBC,YAAAA,MADgB,GACND,KADM,CAChBC,MADgB;AAEvBC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAFuB;AAAA,mBAGLV,KAAK,sCAA+BQ,MAA/B,EAHA;;AAAA;AAGjBG,YAAAA,GAHiB;AAAA;AAAA,mBAIJA,GAAG,CAACC,IAAJ,EAJI;;AAAA;AAIjBT,YAAAA,IAJiB;AAAA,6CAKhB;AACHA,cAAAA,IAAI,EAAJA;AADG,aALgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeF,QAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nfunction FilmPage(props) {\n    const {data} = props\n    return <>\n        <p>JSON.s</p>\n        <h1>{data.title}</h1>\n        <p>Directed by - {data.director}</p>\n    </>\n}\n\nFilmPage.getInitialProps = async({query}) => {\n    const {filmID} = query\n    console.log(\"logging here\")\n    const res = await fetch(`https://swapi.co/api/films/${filmID}`)\n    const data = await res.json()\n    return {\n        data\n    }\n}\n\nexport default FilmPage"]},"metadata":{},"sourceType":"module"}